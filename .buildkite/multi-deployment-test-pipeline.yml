steps:
  # Test 1: Elastic CI Stack - Setup kubeconfig and upload as artifact
  - label: "🔧 Setup EKS Access - Updated Plugin"
    key: "setup-eks"
    agents:
      queue: default
    command: |
      # Configure kubectl for EKS cluster using IAM role authentication
      aws eks update-kubeconfig --region us-east-1 --name ola-bk-test
      echo "✅ Kubeconfig configured for EKS cluster"
      
      # Upload kubeconfig from buildkite-agent home directory
      buildkite-agent artifact upload "/var/lib/buildkite-agent/.kube/config"

  # Test 1: Elastic CI Stack - Deploy with plugin
  - label: "☁️ Elastic CI Stack - Deploy"
    key: "elastic-deploy"
    depends_on: "setup-eks"
    agents:
      queue: default
    plugins:
      - artifacts#v1.9.0:
          download: "*"
          destination: "."
      - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#fa7493a:
          mode: deploy
          release: elastic-helm-test
          chart: oci://registry-1.docker.io/bitnamicharts/nginx
          namespace: elastic-test
          kubeconfig: "./var/lib/buildkite-agent/.kube/config"
          set:
            - service.type=ClusterIP
          timeout: 100s
          wait: true
          atomic: true
          create_namespace: true

  # Test 2: Kubernetes Agent
  - label: "🚀 Kubernetes Agent - Deploy"
    key: "k8s-deploy"
    agents:
      queue: kubernetes
    plugins:
      - kubernetes:
          podSpecPatch:
            containers:
            - name: container-0
              image: dtzar/helm-kubectl:latest
            serviceAccountName: deployer-manager
      - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#fa7493a:
          mode: deploy
          release: k8s-helm-test
          chart: oci://registry-1.docker.io/bitnamicharts/nginx
          namespace: k8s-test
          set:
            - service.type=ClusterIP
          timeout: 100s
          wait: true
          atomic: true
          create_namespace: true

  # Test 3: Mac Agent
  - env:
      KUBECONFIG: "./.kube/config"
    key: "mac-deploy"
    label: "🍎 Mac Agent - Deploy"
    agents:
      queue: mac
    command: |
      # Configure kubectl for EKS cluster using AWS credentials
      aws eks update-kubeconfig --region us-east-1 --name ola-bk-test
    plugins:
      - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#fa7493a:
          mode: deploy
          release: mac-helm-test
          chart: oci://registry-1.docker.io/bitnamicharts/nginx
          namespace: mac-test
          set:
            - service.type=ClusterIP
          timeout: 100s
          wait: true
          atomic: true
          create_namespace: true

  # Test 4: Linux Agent
  - env:
      KUBECONFIG: "/mnt/mac/Users/olabuildkite/.kube/config"
    key: "linux-deploy"
    label: "🐧 Linux Agent - Deploy"
    agents:
      queue: linux
    command: |
      # Configure kubectl for EKS cluster using AWS credentials
      aws eks update-kubeconfig --region us-east-1 --name ola-bk-test
    plugins:
      - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#fa7493a:
          mode: deploy
          release: linux-helm-test
          chart: oci://registry-1.docker.io/bitnamicharts/nginx
          namespace: linux-test
          set:
            - service.type=ClusterIP
          timeout: 100s
          wait: true
          atomic: true
          create_namespace: true

  # Manual approval gate before rollbacks
  - block: "🛑 Approve Rollback Testing"
    key: "approve-rollbacks"
    depends_on: 
      - "elastic-deploy"
      - "k8s-deploy"
      - "mac-deploy"
      - "linux-deploy"
    prompt: "Ready to proceed with rollback testing? This will rollback all deployments to previous versions."

  # Rollback Tests Group
  - group: "🔄 Rollback Tests"
    key: "rollback-group"
    depends_on: "approve-rollbacks"
    steps:
      # Test 5: Rollback Elastic CI Stack Deployment
      - label: "🔄 Rollback Elastic CI Stack"
        key: "rollback-elastic"
        agents:
          queue: default
        command: |
          echo "🔄 Testing plugin rollback for Elastic CI Stack deployment..."
        plugins:
          - artifacts#v1.9.0:
              download: "*"
              destination: "."
          - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#fa7493a:
              mode: rollback
              release: elastic-helm-test
              namespace: elastic-test
              kubeconfig: "./var/lib/buildkite-agent/.kube/config"

      # Test 6: Rollback Kubernetes Agent Deployment  
      - label: "🔄 Rollback Kubernetes Agent"
        key: "rollback-k8s"
        agents:
          queue: kubernetes
        plugins:
          - kubernetes:
              podSpecPatch:
                containers:
                - name: container-0
                  image: dtzar/helm-kubectl:latest
                serviceAccountName: deployer-manager
          - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#fa7493a:
              mode: rollback
              release: k8s-helm-test
              namespace: k8s-test
        command: |
          echo "🔄 Testing plugin rollback for Kubernetes agent deployment..."

      # Test 7: Rollback Mac Agent Deployment
      - label: "🔄 Rollback Mac Agent"
        key: "rollback-mac"
        env:
          KUBECONFIG: "./.kube/config"
        agents:
          queue: mac
        command: |
          # Configure kubectl for EKS cluster using AWS credentials
          aws eks update-kubeconfig --region us-east-1 --name ola-bk-test
          echo "🔄 Testing plugin rollback for Mac agent deployment..."
        plugins:
          - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#fa7493a:
              mode: rollback
              release: mac-helm-test
              namespace: mac-test

      # Test 8: Rollback Linux Agent Deployment
      - label: "🔄 Rollback Linux Agent"
        key: "rollback-linux"
        env:
          KUBECONFIG: "/mnt/mac/Users/olabuildkite/.kube/config"
        agents:
          queue: linux
        command: |
          # Configure kubectl for EKS cluster using AWS credentials
          aws eks update-kubeconfig --region us-east-1 --name ola-bk-test
          echo "🔄 Testing plugin rollback for Linux agent deployment..."
        plugins:
          - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#fa7493a:
              mode: rollback
              release: linux-helm-test
              namespace: linux-test

  # Cleanup Step
  - label: "🧹 Cleanup All Test Deployments"
    key: "cleanup-all"
    depends_on: "rollback-group"
    agents:
      queue: "default"
    command: |
      # Configure kubectl for EKS
      aws eks update-kubeconfig --region us-east-1 --name ola-bk-test
      
      echo "🧹 Cleaning up all test deployments..."
      
      # Cleanup all test releases
      helm uninstall elastic-helm-test -n elastic-test || echo "elastic-helm-test already removed"
      helm uninstall k8s-helm-test -n k8s-test || echo "k8s-helm-test already removed"
      helm uninstall mac-helm-test -n mac-test || echo "mac-helm-test already removed"
      helm uninstall linux-helm-test -n linux-test || echo "linux-helm-test already removed"
      
      # Delete namespaces
      kubectl delete namespace elastic-test || echo "elastic-test namespace already removed"
      kubectl delete namespace k8s-test || echo "k8s-test namespace already removed"
      kubectl delete namespace mac-test || echo "mac-test namespace already removed"
      kubectl delete namespace linux-test || echo "linux-test namespace already removed"
      
      echo "✅ Cleanup complete!"
      echo "🎯 Multi-agent Helm plugin testing completed successfully!"
