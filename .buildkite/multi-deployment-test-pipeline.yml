steps:
  # Test 1: Elastic CI Stack Agent (Native EC2 with EKS access) - Install Helm
  - label: "🔧 Install Helm on Elastic CI Stack Agent"
    key: "install-helm"
    agents:
      queue: "default"
    command: |
      # Install Helm to user directory (no sudo required)
      curl -fsSL -o helm.tar.gz https://get.helm.sh/helm-v3.18.6-linux-amd64.tar.gz
      tar -zxvf helm.tar.gz
      mkdir -p ~/bin
      mv linux-amd64/helm ~/bin/helm
      export PATH="$HOME/bin:$PATH"
      
      # Configure kubectl for EKS cluster using IAM role authentication
      aws eks update-kubeconfig --region us-east-1 --name ola-bk-test
      
      # Verify installation
      ~/bin/helm version
      kubectl version --client

  # Test 1: Elastic CI Stack Agent (Native EC2 with EKS access) - Deploy
  - label: "🚀 Test 1: Elastic CI Stack + Helm Chart"
    key: "elastic-ci-test"
    depends_on: "install-helm"
    agents:
      queue: "default"  # Uses Elastic CI Stack agents with EKS access
    env:
      PATH: "$HOME/bin:$PATH"
    plugins:
      - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#main:
          mode: deploy
          chart: "oci://registry-1.docker.io/bitnamicharts/nginx"
          release: "elastic-ci-nginx"
          namespace: plugin
          set:
            - service.type=ClusterIP
          timeout: "100s"
          wait: true
          atomic: true
          create_namespace: true

  # Test 2: Docker Plugin (Containerized execution with EKS access)
  - label: "🐳 Test 2: Docker Plugin + Helm Chart"
    key: "docker-plugin-test"
    depends_on: "elastic-ci-test"
    agents:
      queue: "default"
    plugins:
      - docker#v5.8.0:
          image: "dtzar/helm-kubectl:latest"
          propagate-environment: true
      - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#main:
          mode: deploy
          chart: "oci://registry-1.docker.io/bitnamicharts/apache"
          release: "docker-plugin-apache"
          namespace: plugin
          set:
            - service.type=ClusterIP
          timeout: "100s"
          wait: true
          atomic: true
          create_namespace: true
    command: |
      # Configure kubectl for EKS cluster using IAM role authentication
      aws eks update-kubeconfig --region us-east-1 --name ola-bk-test

  # Test 3: Docker Compose Plugin (Multi-container execution with EKS access)
  - label: "🐙 Test 3: Docker Compose Plugin + Helm Chart"
    key: "docker-compose-test"
    depends_on: "docker-plugin-test"
    agents:
      queue: "default"
    command: |
      # Configure kubectl for EKS cluster using IAM role authentication
      aws eks update-kubeconfig --region us-east-1 --name ola-bk-test
    plugins:
      - docker-compose#v4.16.0:
          run: helm-deployer
          propagate-environment: true
      - https://github.com/mykematt/deployment-helm-chart-buildkite-plugin.git#main:
          mode: deploy
          chart: "oci://registry-1.docker.io/bitnamicharts/nginx"
          release: "compose-plugin-nginx"
          namespace: plugin
          set:
            - service.type=ClusterIP
          timeout: "100s"
          wait: true
          atomic: true
          create_namespace: true

  # Verification Step
  - label: "✅ Verify All Deployments"
    key: "verify-all"
    depends_on: "docker-compose-test"
    agents:
      queue: kubernetes
    plugins:
      - kubernetes:
          podSpec:
            serviceAccountName: deployer-manager
            containers:
            - image: dtzar/helm-kubectl:latest
              name: helm-kubectl
    command: |
      echo "🔍 Verifying all deployments..."
      helm list -n plugin
      echo ""
      echo "📊 Deployment Status:"
      kubectl get deployments -n plugin
      echo ""
      echo "🎯 All 3 deployment methods tested successfully!"

  # Cleanup Block
  - block: "🧹 Clean up test deployments?"
    key: "cleanup-block"
    depends_on: "verify-all"

  # Cleanup Step
  - label: "🧹 Cleanup All Test Deployments"
    key: "cleanup-all"
    depends_on: "cleanup-block"
    agents:
      queue: kubernetes
    plugins:
      - kubernetes:
          podSpec:
            serviceAccountName: deployer-manager
            containers:
            - image: dtzar/helm-kubectl:latest
              name: helm-kubectl
    command: |
      echo "🧹 Cleaning up test deployments..."
      helm uninstall elastic-ci-nginx -n plugin || true
      helm uninstall docker-plugin-apache -n plugin || true
      helm uninstall compose-plugin-nginx -n plugin || true
      echo "✅ Cleanup complete!"
